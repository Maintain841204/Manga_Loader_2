!function(){"use strict";if(window.mangaDownloaderActive)console.log("Manga Downloader already active");else{window.mangaDownloaderActive=!0;class ImageScanner{constructor(){this.foundImages=new Set,this.isScanning=!1,this.siteHandlers={"bato.to":this.handleBatoTo.bind(this),"mangadex.org":this.handleMangaDex.bind(this),"mangakakalot.com":this.handleMangakakalot.bind(this),"manganelo.com":this.handleManganelo.bind(this)}}async scanForImages(){if(this.isScanning)return Array.from(this.foundImages);this.isScanning=!0,this.foundImages.clear();try{const e=[this.scanVisibleImages(),this.scanLazyLoadAttributes(),this.scanBackgroundImages(),this.scanSiteSpecific()];(await Promise.allSettled(e)).forEach(e=>{"fulfilled"===e.status&&Array.isArray(e.value)&&e.value.forEach(e=>this.foundImages.add(JSON.stringify(e)))}),await this.forceLazyLoad();return Array.from(this.foundImages).map(e=>JSON.parse(e)).filter(e=>this.isValidMangaImage(e))}finally{this.isScanning=!1}}scanVisibleImages(){const e=[];return document.querySelectorAll("img").forEach(t=>{t.src&&!this.isPlaceholder(t.src)&&e.push({url:t.src,width:t.naturalWidth||t.width,height:t.naturalHeight||t.height,format:this.detectFormat(t.src),element:t})}),e}scanLazyLoadAttributes(){const e=[];return["data-src","data-lazy","data-original","data-srcset","data-url","data-image","data-bg","data-full"].forEach(t=>{document.querySelectorAll(`[${t}]`).forEach(n=>{const a=n.getAttribute(t);a&&!this.isPlaceholder(a)&&e.push({url:a,width:n.getAttribute("width")||0,height:n.getAttribute("height")||0,format:this.detectFormat(a),element:n})})}),e}scanBackgroundImages(){const e=[];return document.querySelectorAll("*").forEach(t=>{const n=window.getComputedStyle(t).backgroundImage;if(n&&"none"!==n){const a=n.match(/url\(["']?(.*?)["']?\)/);a&&a[1]&&!this.isPlaceholder(a[1])&&e.push({url:a[1],width:t.offsetWidth,height:t.offsetHeight,format:this.detectFormat(a[1]),element:t})}}),e}async scanSiteSpecific(){const e=window.location.hostname,t=this.siteHandlers[e];return t?await t():[]}async handleBatoTo(){const e=[],t=document.querySelectorAll(".page-img, .chapter-image");for(const n of t){n.scrollIntoView({behavior:"smooth"}),await this.wait(500);const t=n.querySelector("img");t&&t.src&&!this.isPlaceholder(t.src)&&e.push({url:t.src,width:t.naturalWidth,height:t.naturalHeight,format:this.detectFormat(t.src),element:t})}return e}async handleMangaDex(){const e=[],t=document.querySelectorAll(".page-image img, .manga-page img");for(const n of t)n.src&&!this.isPlaceholder(n.src)&&e.push({url:n.src,width:n.naturalWidth,height:n.naturalHeight,format:this.detectFormat(n.src),element:n});return e}async handleMangakakalot(){const e=[],t=document.querySelectorAll(".container-chapter-reader img");for(const n of t)n.src&&!this.isPlaceholder(n.src)&&e.push({url:n.src,width:n.naturalWidth,height:n.naturalHeight,format:this.detectFormat(n.src),element:n});return e}async handleManganelo(){return this.handleMangakakalot()}async forceLazyLoad(){const e=window.innerHeight,t=Math.max(document.body.scrollHeight,document.documentElement.scrollHeight),n=window.pageYOffset;for(let n=0;n<t;n+=e)window.scrollTo(0,n),await this.wait(300),document.querySelectorAll("img[data-src], img[data-lazy]").forEach(e=>{this.isInViewport(e)&&(e.dispatchEvent(new Event("scroll")),e.dispatchEvent(new Event("load")))});window.scrollTo(0,n),await this.wait(500)}isInViewport(e){const t=e.getBoundingClientRect();return t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)}isPlaceholder(e){return["placeholder","loading","spinner","blank","empty","data:image","1x1","transparent","pixel"].some(t=>e.toLowerCase().includes(t.toLowerCase()))}isValidMangaImage(e){if(e.width<100||e.height<100)return!1;if(!["jpg","jpeg","png","webp","gif"].includes(e.format))return!1;return!["banner","ad","advertisement","promo"].some(t=>e.url.toLowerCase().includes(t))}detectFormat(e){const t=e.match(/\.([a-zA-Z0-9]+)(?:\?|$)/);return t?t[1].toLowerCase():"unknown"}wait(e){return new Promise(t=>setTimeout(t,e))}}class OverlayUI{constructor(e){this.onDownload=e,this.selectedImages=new Set,this.allImages=[],this.filters={jpg:!0,jpeg:!0,png:!0,webp:!0,gif:!1},this.shadowRoot=null,this.isVisible=!1}show(e){this.allImages=e,this.selectedImages.clear(),this.shadowRoot||this.createShadowDOM(),this.updateImageGrid(),this.updateCounter(),this.isVisible=!0;const t=this.shadowRoot.querySelector(".manga-downloader-overlay");t.style.display="flex",requestAnimationFrame(()=>{t.style.opacity="1",t.style.transform="scale(1)"})}hide(){if(!this.shadowRoot)return;const e=this.shadowRoot.querySelector(".manga-downloader-overlay");e.style.opacity="0",e.style.transform="scale(0.95)",setTimeout(()=>{e.style.display="none",this.isVisible=!1},200)}createShadowDOM(){const e=document.createElement("div");e.id="manga-downloader-host",document.body.appendChild(e),this.shadowRoot=e.attachShadow({mode:"open"});const t=document.createElement("style");t.textContent=this.getStyles();const n=document.createElement("div");n.className="manga-downloader-overlay",n.innerHTML=this.getHTML(),this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(n),this.attachEventListeners()}getStyles(){return"\n            :host {\n                all: initial;\n            }\n            \n            .manga-downloader-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background: rgba(0, 0, 0, 0.9);\n                display: none;\n                flex-direction: column;\n                z-index: 999999;\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n                font-size: 14px;\n                color: white;\n                opacity: 0;\n                transform: scale(0.95);\n                transition: all 0.2s ease;\n            }\n            \n            .header {\n                background: #1a1a1a;\n                padding: 20px;\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                border-bottom: 1px solid #333;\n            }\n            \n            .header h3 {\n                margin: 0;\n                font-size: 18px;\n            }\n            \n            .filters {\n                display: flex;\n                gap: 15px;\n            }\n            \n            .filters label {\n                display: flex;\n                align-items: center;\n                gap: 5px;\n                cursor: pointer;\n            }\n            \n            .filters input[type=\"checkbox\"] {\n                margin: 0;\n            }\n            \n            .close-btn {\n                background: #ff4444;\n                border: none;\n                color: white;\n                width: 30px;\n                height: 30px;\n                border-radius: 50%;\n                cursor: pointer;\n                font-size: 16px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            \n            .close-btn:hover {\n                background: #ff6666;\n            }\n            \n            .image-grid-container {\n                flex: 1;\n                overflow-y: auto;\n                padding: 20px;\n            }\n            \n            .image-grid {\n                display: grid;\n                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n                gap: 15px;\n                max-height: none;\n            }\n            \n            .image-item {\n                background: #2a2a2a;\n                border-radius: 8px;\n                overflow: hidden;\n                cursor: pointer;\n                transition: all 0.2s ease;\n                border: 2px solid transparent;\n            }\n            \n            .image-item:hover {\n                background: #333;\n                transform: translateY(-2px);\n            }\n            \n            .image-item.selected {\n                border-color: #4CAF50;\n                background: #1a4a1a;\n            }\n            \n            .image-preview {\n                width: 100%;\n                height: 150px;\n                object-fit: cover;\n                display: block;\n            }\n            \n            .image-info {\n                padding: 10px;\n            }\n            \n            .image-info .format {\n                background: #666;\n                color: white;\n                padding: 2px 6px;\n                border-radius: 3px;\n                font-size: 11px;\n                text-transform: uppercase;\n            }\n            \n            .image-info .format.webp { background: #ff9800; }\n            .image-info .format.jpg,\n            .image-info .format.jpeg { background: #2196f3; }\n            .image-info .format.png { background: #9c27b0; }\n            .image-info .format.gif { background: #4caf50; }\n            \n            .image-info .dimensions {\n                font-size: 12px;\n                color: #ccc;\n                margin-top: 4px;\n            }\n            \n            .actions {\n                background: #1a1a1a;\n                padding: 20px;\n                display: flex;\n                gap: 15px;\n                justify-content: center;\n                border-top: 1px solid #333;\n                flex-wrap: wrap;\n            }\n            \n            .btn {\n                background: #4CAF50;\n                border: none;\n                color: white;\n                padding: 12px 24px;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 14px;\n                transition: background 0.2s;\n                min-width: 120px;\n            }\n            \n            .btn:hover {\n                background: #45a049;\n            }\n            \n            .btn:disabled {\n                background: #666;\n                cursor: not-allowed;\n            }\n            \n            .btn.secondary {\n                background: #666;\n            }\n            \n            .btn.secondary:hover {\n                background: #777;\n            }\n            \n            .btn.danger {\n                background: #f44336;\n            }\n            \n            .btn.danger:hover {\n                background: #da190b;\n            }\n            \n            .progress {\n                display: none;\n                background: #333;\n                height: 4px;\n                margin: 10px 0;\n                border-radius: 2px;\n                overflow: hidden;\n            }\n            \n            .progress-bar {\n                background: #4CAF50;\n                height: 100%;\n                width: 0%;\n                transition: width 0.3s ease;\n            }\n            \n            @media (max-width: 768px) {\n                .header {\n                    flex-direction: column;\n                    gap: 15px;\n                    align-items: stretch;\n                }\n                \n                .filters {\n                    justify-content: center;\n                }\n                \n                .image-grid {\n                    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n                    gap: 10px;\n                }\n                \n                .actions {\n                    flex-direction: column;\n                }\n            }\n        "}getHTML(){return'\n            <div class="header">\n                <div>\n                    <h3>Gefundene Manga-Bilder: <span id="image-count">0</span></h3>\n                    <div class="progress" id="progress">\n                        <div class="progress-bar" id="progress-bar"></div>\n                    </div>\n                </div>\n                <div class="filters">\n                    <label><input type="checkbox" data-format="jpg" checked> JPG</label>\n                    <label><input type="checkbox" data-format="png" checked> PNG</label>\n                    <label><input type="checkbox" data-format="webp" checked> WebP</label>\n                    <label><input type="checkbox" data-format="gif"> GIF</label>\n                </div>\n                <button class="close-btn" id="close-overlay">✕</button>\n            </div>\n            <div class="image-grid-container">\n                <div class="image-grid" id="image-grid">\n                </div>\n            </div>\n            <div class="actions">\n                <button class="btn secondary" id="select-all">Alle auswählen</button>\n                <button class="btn secondary" id="select-none">Auswahl aufheben</button>\n                <button class="btn" id="download-zip" disabled>Als ZIP herunterladen</button>\n                <button class="btn" id="download-pdf" disabled>Als PDF herunterladen</button>\n            </div>\n        '}attachEventListeners(){const e=this.shadowRoot;e.getElementById("close-overlay").addEventListener("click",()=>{this.hide()}),e.querySelectorAll('.filters input[type="checkbox"]').forEach(e=>{e.addEventListener("change",e=>{this.filters[e.target.dataset.format]=e.target.checked,this.updateImageGrid()})}),e.getElementById("select-all").addEventListener("click",()=>{this.selectAll()}),e.getElementById("select-none").addEventListener("click",()=>{this.selectNone()}),e.getElementById("download-zip").addEventListener("click",()=>{this.downloadSelected("zip")}),e.getElementById("download-pdf").addEventListener("click",()=>{this.downloadSelected("pdf")}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isVisible&&this.hide()})}updateImageGrid(){const e=this.shadowRoot.getElementById("image-grid"),t=this.allImages.filter(e=>this.filters[e.format]||this.filters[e.format.toLowerCase()]);e.innerHTML="",t.forEach((t,n)=>{const a=document.createElement("div");a.className="image-item",a.dataset.index=n;this.selectedImages.has(t.url)&&a.classList.add("selected"),a.innerHTML=`\n                <img class="image-preview" src="${t.url}" alt="Manga page" loading="lazy">\n                <div class="image-info">\n                    <span class="format ${t.format}">${t.format.toUpperCase()}</span>\n                    <div class="dimensions">${t.width} × ${t.height}</div>\n                </div>\n            `,a.addEventListener("click",()=>{this.toggleImageSelection(t,a)}),e.appendChild(a)}),this.updateCounter()}toggleImageSelection(e,t){this.selectedImages.has(e.url)?(this.selectedImages.delete(e.url),t.classList.remove("selected")):(this.selectedImages.add(e.url),t.classList.add("selected")),this.updateActionButtons()}selectAll(){this.allImages.filter(e=>this.filters[e.format]||this.filters[e.format.toLowerCase()]).forEach(e=>{this.selectedImages.add(e.url)}),this.shadowRoot.querySelectorAll(".image-item").forEach(e=>{e.classList.add("selected")}),this.updateActionButtons()}selectNone(){this.selectedImages.clear(),this.shadowRoot.querySelectorAll(".image-item").forEach(e=>{e.classList.remove("selected")}),this.updateActionButtons()}updateCounter(){const e=this.shadowRoot.getElementById("image-count"),t=this.allImages.filter(e=>this.filters[e.format]||this.filters[e.format.toLowerCase()]).length;e.textContent=`${t} (${this.selectedImages.size} ausgewählt)`}updateActionButtons(){const e=this.selectedImages.size>0;this.shadowRoot.getElementById("download-zip").disabled=!e,this.shadowRoot.getElementById("download-pdf").disabled=!e,this.updateCounter()}showProgress(e=!0){this.shadowRoot.getElementById("progress").style.display=e?"block":"none"}updateProgress(e){this.shadowRoot.getElementById("progress-bar").style.width=`${e}%`}async downloadSelected(e){if(0===this.selectedImages.size)return;const t=Array.from(this.selectedImages),n=this.allImages.filter(e=>this.selectedImages.has(e.url));this.showProgress(!0),this.updateProgress(0);try{this.onDownload&&await this.onDownload({urls:t,images:n,format:e,onProgress:e=>this.updateProgress(e)})}catch(e){console.error("Download failed:",e),alert("Download fehlgeschlagen: "+e.message)}finally{this.showProgress(!1)}}destroy(){const e=document.getElementById("manga-downloader-host");e&&e.remove(),this.shadowRoot=null,this.isVisible=!1}}void 0!==window.mangaDownloaderInstance&&window.mangaDownloaderInstance.destroy(),window.mangaDownloaderInstance=new class{constructor(e="https://your-app.vercel.app"){this.apiBaseUrl=e,this.scanner=new ImageScanner,this.ui=new OverlayUI(this.handleDownload.bind(this)),this.isActive=!1}async init(){if(this.isActive)console.log("Manga Downloader is already active");else{this.isActive=!0,console.log("Initializing Manga Downloader...");try{this.showNotification("Suche nach Manga-Bildern...","info");const e=await this.scanner.scanForImages();if(0===e.length)return void this.showNotification("Keine Manga-Bilder gefunden","warning");console.log(`Found ${e.length} images`),this.ui.show(e),this.showNotification(`${e.length} Bilder gefunden!`,"success")}catch(e){console.error("Failed to scan for images:",e),this.showNotification("Fehler beim Suchen nach Bildern: "+e.message,"error")}}}async handleDownload({urls:e,images:t,format:n,onProgress:a}){console.log(`Downloading ${e.length} images as ${n}`);try{const o=await this.processUrls(e),s=await fetch(`${this.apiBaseUrl}/api/download`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({urls:o,format:n,options:{prefix:this.generateFilePrefix(),convertToJpeg:"zip"===n&&this.shouldConvertToJpeg(t),title:this.generateTitle()}})});if(!s.ok){const e=await s.json().catch(()=>({}));throw new Error(e.error||`HTTP ${s.status}`)}a&&a(100);const i=await s.blob(),r="zip"===n?"manga-pages.zip":"manga-pages.pdf";await this.downloadBlob(i,r),this.showNotification(`${n.toUpperCase()} erfolgreich heruntergeladen!`,"success")}catch(e){throw console.error("Download failed:",e),e}}async processUrls(e){const t=[];for(const n of e)try{if(new URL(n).origin!==window.location.origin){const e=`${this.apiBaseUrl}/api/proxy?url=${encodeURIComponent(n)}`;t.push(e)}else t.push(n)}catch(e){console.warn("Invalid URL, skipping:",n)}return t}shouldConvertToJpeg(e){return e.filter(e=>"webp"===e.format.toLowerCase()).length/e.length>.5}generateFilePrefix(){return`${window.location.hostname.replace(/^www\./,"").replace(/\./g,"-")}-${(new Date).toISOString().slice(0,10)}-page-`}generateTitle(){return(document.title||document.querySelector("h1")?.textContent||window.location.hostname).slice(0,100)}async downloadBlob(e,t){const n=URL.createObjectURL(e),a=document.createElement("a");a.href=n,a.download=t,a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a),setTimeout(()=>URL.revokeObjectURL(n),1e3)}showNotification(e,t="info"){const n=document.createElement("div");n.style.cssText="\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000000;\n            padding: 15px 20px;\n            border-radius: 6px;\n            color: white;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            font-size: 14px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n            max-width: 300px;\n            word-wrap: break-word;\n            transform: translateX(100%);\n            transition: transform 0.3s ease;\n        ";const a={info:"#2196F3",success:"#4CAF50",warning:"#FF9800",error:"#F44336"};n.style.backgroundColor=a[t]||a.info,n.textContent=e,document.body.appendChild(n),requestAnimationFrame(()=>{n.style.transform="translateX(0)"}),setTimeout(()=>{n.style.transform="translateX(100%)",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},4e3)}destroy(){this.ui.destroy(),this.isActive=!1}},window.mangaDownloaderInstance.init()}}();